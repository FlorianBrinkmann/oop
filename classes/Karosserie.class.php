<?phpinclude_once ( 'Anzeige.class.php' );include_once ( 'Body.class.php' );include_once ( 'CarModel.class.php' );include_once ( 'Datenbank.class.php' );include_once ( 'Dimensions.class.php' );include_once ( 'DirektSuche.class.php' );include_once ( 'EuroCarSegment.class.php' );include_once ( 'FilterArray.class.php' );include_once ( 'Formular.class.php' );include_once ( 'OEMbrand.class.php' );include_once ( 'Process.class.php' );include_once ( 'Weights.class.php' );class Karosserie extends Body {	function __construct() {		new CarModel();		new Dimensions();		new EuroCarSegment();		new OEMbrand();		new Process();		new Weights();	}	function setObjectValues() {		$this->objectValues = [ 'id', 'modelYear', 'brandID', 'modelID', 'shortEuroCarSegment' ];	}	function getValues( $wantedValues ) {		$originalWantedValues = $wantedValues;		$objectValues         = $this->objectValues;		$restArray            = array_intersect( $wantedValues, $objectValues );		if ( $restArray ) {			foreach ( $restArray as $key => $value ) {				unset( $wantedValues[ $key ] );			}		}		$db     = new Datenbank();		$result = $db->select();		$values = new FilterArray();		$values = $values->filter( $result, $restArray );		$classes = [ 'CarModel', 'OEMbrand', 'EuroCarSegment', 'Dimensions', 'Weights', 'Process' ];		foreach ( $classes as $class ) {			if ( $wantedValues ) {				$class = new $class;				$class->setObjectValues();				$classObjectValues = $class->objectValues;				$intersect         = new FilterArray();				$restArray         = $intersect->intersect( $wantedValues, $classObjectValues );				if ( $restArray != $wantedValues && ! empty ( $restArray ) ) {					$class        = $class->getValues( $wantedValues, $restArray );					$classValues  = $class['values'];					$wantedValues = $class['wantedValues'];					$values       = array_merge_recursive( $classValues, $values );				}			}		}		$counter = 0;		foreach ( $values as $value ) {			$value                        = $this->sortArrayByArray( $value, $originalWantedValues );			$values["karosserie$counter"] = $value;			$counter ++;		}		return $values;	}	function sortArrayByArray( Array $array, $originalWantedValues ) {		$ordered = array();		foreach ( $originalWantedValues as $key ) {			if ( array_key_exists( $key, $array ) ) {				$ordered[ $key ] = $array[ $key ];				unset( $array[ $key ] );			}		}		return $ordered + $array;	}}/*Die getValues-Funktion holt alle Werte, die auf die $_POST-Parameter passen. Anschließend werden von View (bspw derindex.php) die anderen Klassen der Daten aufgerufen, die dann die übergebenen Parameter aus „ihren“ Daten rausfiltern*/